<?

namespace Acrit\Core\Export;

use Acrit\Core\Helper;

$obTabControl->BeginCustomField('FORMAT', Helper::getMessage('ACRIT_EXP_FORMAT'));
?>
    <tr class="heading">
        <td><?= $obTabControl->GetCustomLabelHTML() ?></td>
    </tr>
    <tr>
        <td>
            <div class="col-md-8">
                <p>
                    <b>1. Создаем новый профиль, выбираем плагин “Произвольный XML” </b>
                </p>
                <p>
                    <img src="https://lh4.googleusercontent.com/JUwSlEwaLXifWw4a6XSa9SMcS0uet_e3TP9fv_Orzx-P9K3j9-afrrqfhawhjvjA07guD8WjM3tSvj5bWSGWxz4oVPyzyqLltdzAgm2EliFxycEFxpcAjrsFFifqp-9QJY9YzPXq"
                         width="602" height="184">
                </p>
                <p>
                    <img src="https://lh4.googleusercontent.com/gQV1jqcZrF2Nh_Rl_745e3oWgQbL3ZgdzVDn8KPVNM_vpv79CDFF1Fe2HG9Rb6T9CEU38anddmSe7rgSorZ1nYkLq6uyMaTc-tCBxl9VpBPSTKrjhle8NIMxkX2ACg8h98G0aY8O"
                         width="513" height="126">
                </p>
                <p>
                    <b>2. Копируем пример файла который мы хотим сгенерировать </b>
                </p>
                <p>
                    <img src="https://lh6.googleusercontent.com/YIIewdrHKKEenAN55zj42ezoX5szDEDmv48_YcgDwYSu5JKQyOgiKgo_yV2unLucyyDIUdidCgMWeecfTkFiq5Vp8lZsn5TryhXirkHdAOQSnEjblYGBiRSKDsuV4K_yKMsiHLgE"
                         width="602" height="771">
                </p>
                <p>
                    <b>3. Вставляем скопированный код во вкладку “XML (общий)”, поле “XML-структура” </b>
                </p>
                <p>
                    <img src="https://lh5.googleusercontent.com/AGGl5cjlDThoZEX5VwJB3pfqdEAg0R81HSFkmq0AGBo2aZI7Bp3TSZy3-CLt1CF2Fg0YpDrbTBgI0b6XUqqZF5nR-2psK3UUKcNO0B0Fg-Cx25mzrzhGdH-qc_P_0o6AKgv1rbrk"
                         width="602" height="335">
                </p>
                <p>
                    <b>4. Заменяем содержимое главных тегов на макросы </b>
                </p>
                <p>
                    Например
                </p>
                <p>
                    &lt;categories&gt;
                </p>
                <p>
                    &nbsp;&nbsp;&nbsp; &lt;category id="1278"&gt;Электроника&lt;/category&gt;
                </p>
                <p>
                    &nbsp;&nbsp;&nbsp; &lt;category id="1293" parentId="1278"&gt;Смартфоны&lt;/category&gt;
                </p>
                <p>
                    &nbsp;&nbsp;&nbsp; &lt;category id="1345" parentId="1278"&gt;Телефоны&lt;/category&gt;
                </p>
                <p>
                    &nbsp;&nbsp;&nbsp; &lt;category id="3761" parentId="1278"&gt;Телевизоры&lt;/category&gt;
                </p>
                <p>
                    &nbsp;&nbsp;&nbsp; &lt;category id="1553" parentId="3761"&gt;Медиа-плееры&lt;/category&gt;
                </p>
                <p>
                    &nbsp;&nbsp;&nbsp; &lt;category id="3798"&gt;Бытовая техника&lt;/category&gt;&nbsp;&nbsp;&nbsp;
                </p>
                <p>
                    &lt;/categories&gt;
                </p>
                <p>
                    <b>изменится на </b>
                </p>
                <p>
                    &lt;categories&gt;#CATEGORIES#&lt;/categories&gt;
                </p>
                <br>
                <p>
                    <b>5. Заменяем параметры тегов на существующие макросы </b>
                </p>
                <p>
                    &lt;yml_catalog date="2018-09-25 17:22"&gt;
                </p>
                <p>
                    <b>изменится на </b>
                </p>
                <p>
                    &lt;yml_catalog date="#DATETIME#"&gt;
                </p>
                <br>
                <p>
                    <b>6. Применяем настройки(Кнопка “Применить”). Переходим к вкладке “Настройки инфоблоков”. Выбираем
                        нужный нам инфоблок и заменяем при необходимости формат поля “XML (товары)” </b>
                </p>
                <p>
                    <img src="https://lh4.googleusercontent.com/owyku8jzPXpac0tvOWI5KLRhJxWTunO9c9R6Tji_iELcpmhTWwXXK9NAKzSXc6OXNFudow3gs0ofYtiTfiwKIWHGIu-WGpzRZs1RT_HkCO9TmOUGORiLN7MTHltdWIQH8jtyYijE"
                         width="521" height="442">
                </p>
                <br>
                <p>
                    <img src="https://lh3.googleusercontent.com/b8D34xmtcGLlmF79YOigb-u6mLKD-ob272D-aN7LtIXC-eGnOPuptKiKfjP--4ikQGPQOFU5F3drB_N3IJnJOzvYxOy6P5eedSiorQy8AsQmwQXD1WrIPwd-X3s5GX9bsNKJiwFZ"
                         width="470" height="263">
                </p>
                <p>
                    <b>Заменяем значения на макросы </b>
                </p>
                <p>
                    <b>Пример</b>
                </p>
                <p>
                    &lt;item&gt;
                </p>
                <p>
                    меняется на
                </p>
                <br>
                <p>
                    &lt;offer id="#ID#" available="#AVAILABLE#"&gt;
                </p>
                <br>
                <p>
                    <b>Пример</b>
                </p>
                <p>
                    &lt;name&gt;Товар 1&lt;/name&gt;
                </p>
                <p>
                    меняется на
                </p>
                <br>
                <p>
                    &lt;name&gt;#NAME#&lt;/name&gt;
                </p>
                <br>
                <p>
                    <b>Применяем настройки (кнопка “Применить”) </b>
                </p>
                <p>
                    На основе макросов которые мы использовали
                </p>
                <p>
                    в поле “XML (товары)” создаются поля на вкладке “Поля товаров”
                </p>
                <p>
                    <b>Заполняем поля. </b>
                </p>
                <p>
                    <img src="https://lh6.googleusercontent.com/z02BdYffxE-Pk0Snwa1sVlZPbYstWzIGgHPkm-5rH5mc373Uv6e0wyGYpNuMO_LxQbuhc4w0vzms50FL3IagVAGoC-aGW1OZgDDoLp6mytzK9VBxSEPorIyiDM2yDXlyC_1ELoyb"
                         width="602" height="483">
                </p>
                <p>
                    Копируем формат
                </p>
                <p>
                    с поля “Товар (элемент инфоблока)”
                </p>
                <p>
                    в поле “Торговое предложение”
                </p><br>

            </div>
        </td>
    </tr>
    <?
$obTabControl->EndCustomField('FORMAT');

$obTabControl->BeginCustomField('MANUAL_DEV', Helper::getMessage('ACRIT_EXP_MANUAL_DEV'));
?>
    <tr class="heading">
        <td><?= $obTabControl->GetCustomLabelHTML() ?></td>
    </tr>
    <tr>
        <td>
            <div class="col-md-8">
                <h1>Введение </h1>
                <p>
                    Модуль «Экспорт на порталы» предназначен для выгрузки товаров из сайта на различные торговые
                    площадки, онлайн-сервисы или социальные сети.
                </p>
                <p>
                    Модуль построен на принципе плагинов (один плагин это интеграция с одним сайтом/сервисом), благодаря
                    чему в модуле имеется возможность интеграции практически с любыми сервисами (текущими и
                    перспективными). Каждая интеграция может быть как простой (одноформатной), так и многоформатной.
                    Например, интеграция с Яндекс.Маркетом разделяется на такие форматы как упрощенный тип, произвольный
                    тип, книги, аудиокниги и т.д. При этом каждый формат в каждой интеграции хоть и основан на общем
                    родителе, но может быть абсолютно самостоятельным.
                </p>
                <p>
                    Модуль использует ядро D7, работает на различных версиях PHP. Возможна выгрузка как прямо со
                    страницы административного раздела, так и с помощью планировщика Cron.
                </p>
                <br>
                <h1>Термины</h1>
                <br>
                <p>
                    Автообработка товаров – автоматическая генерация данных для выгрузки товара (XML, CSV, массив данных
                    и др) и сохранение этих данных в БД при: добавлении или изменение товара, свойств, цен, остатков на
                    складах.
                </p>
                <p>
                    Торговая площадка – сторонний сайт или онлайн-сервис, для которого модуль осуществляет выгрузку
                    товаров.
                </p>
                <p>
                    Профиль – совокупность настроек для выгрузки товаров из одного или нескольких инфоблоков на одну
                    торговую площадку.
                </p>
                <br>
                <h1>Общее устройство и работа модуля</h1>
                <br>
                <p>
                    Принцип настройки модуля заключается в создании профилей выгрузки для каждого случая, причем каждый
                    профиль можно настроить сразу на все нужные инфоблоки: для каждого инфоблока нужно сначала выбрать
                    его в выпадающем списке, а затем настроить все параметры и поля.
                </p>
                <p>
                    Благодаря оригинальной идее и устройству модуля, можно настроить работу разными способами. Основной
                    сценарий, с использованием автообработки, следующий: модуль отслеживает изменения в имеющихся
                    товарах и добавление новых и автоматически обрабатывает товар по всем настроенным активным профилям,
                    для которых настроена автообработка: в случае, если товар подходит под условия профиля
                    (принадлежность к разделам и фильтры), то информация для этого товара (с привязкой к профилю)
                    сохраняется в отдельную таблицу базы данных, иначе он оттуда удаляется (это первый этап). Таким
                    образом, в указанной таблице хранится вся информация для выгрузки, которая впоследствии (это второй
                    этап) выгружается необходимыми способами (либо в XML, либо по API на сторонние сайта, либо иными
                    способами).
                </p>
                <p>
                    Другой сценарий работы, без автообработки, отличается от вышеописанного тем, что первый этап
                    автоматически не выполняется, он выполняется только в начале второго этапа.
                </p>
                <p>
                    Таким образом, по первому сценарию большая часть нагрузки при экспорте ложится на автообработку («на
                    лету»), при этом сохранение каждого товара будет занимать немного больше времени чем обычно. В
                    случае массовой загрузки товаров из внешних источников (напр., интеграция с 1С или загрузка товаров
                    сторонними модулями) такой сценарий будет увеличивать общее время загрузки товаров (ориентировочно,
                    на 10-30%). Поэтому, если товары загружаются массово, то автообработка не имеет смысла, и ее лучше
                    отключать, в таком случае эта работа будет выполняться при запуске выгрузки, перед вторым этапом.
                </p>
                <p>
                    В случае ручного редактирования товаров (когда объемы изменений небольшие), имеет смысл использовать
                    автообработку, т.к. вся работа по генерации будет проходить автоматически, практически не увеличивая
                    время работы менеджера, а этап выгрузки сгенерированных данных, который в среднем занимает до
                    нескольких секунд (если не учитывать выгрузку в файлы Excel и выгрузку по API на сторонние
                    сайты/сервисы), практически не нагружает сайт.
                </p>
                <p>
                    По второму сценарию нагрузка создается только в момент экспорта, и выполняются оба этапа: сначала
                    генерация, затем выгрузка.
                </p>
                <p>
                    Важное замечание: этап генерации данных (который можно отключить отключением автообработки)
                    выполняется и во втором сценарии, т.к. при первичной настройке профиля с автообработкой данных пока
                    никаких не сгенерировано. Но если модуль определит, что сгенерированы все нужные товары, этот этап
                    сразу же завершается.
                </p>
                <br>
                <h1>Профили </h1>
                <br>
                <p>
                    Профиль это совокупность настроек для выгрузки товаров на одну торговую площадку по одной логике,
                    общей для всех инфоблоков в рамках данного профиля. При этом на одну торговую площадку можно
                    настроить сколько угодно профилей, но один профиль может выгружать только на одну торговую площадку.
                </p>
                <p>
                    Структурно, профиль это блок настроек профиля, и блок настроек каждого инфоблока, входящего в состав
                    профиля. Для каждого из этих инфоблоков имеются собственные настройки (в форме редактирования
                    профиля они расположены во вложенных вкладках), а также блок полей, относящихся к инфоблоку. В свою
                    очередь каждое такое поле имеет собственные настройки, а также блок относящихся к нему значений.
                </p>
                <p>
                    Т.е. структура следующая: Профиль – Инфоблок – Поле – Значение поля.
                </p>
                <p>
                    В каждом профиле указывается плагин для загрузки и если плагин имеет несколько форматов- конкретный
                    формат. В зависимости от выбора плагина/формата в профиле появляются дополнительные настройки
                    (напр., итоговый файл или данные для интеграции с торговой площадкой).
                </p>
                <br>
                <h1>Плагины и их структура</h1>
                <br>
                <p>
                    Плагин представляет собой обособленный программный код, предназначенный для интеграции модуля с
                    одной конкретной торговой площадкой (напр., плагин для Яндекс.Маркета, плагин для Авито и т.д.).
                    Т.к. в рамках одной торговой площадки могут быть различные варианты выгрузки, модуль предусматривает
                    различные форматы в рамках одного плагина. Например, плагин Яндекс.Маркета имеет такие форматы как
                    упрощенный тип, произвольный тип, книги и т.д.
                </p>
                <p>
                    Плагины модуля хранятся в папке plugins модуля. Важная особенность заключается в том, что
                    программист, без любого вмешательства в код и файлы модуля, может разработать собственную интеграцию
                    с любым сервисом – для этого необходимо использовать обработчик события «OnFindPlugins»: в этом
                    обработчике нет аргументов, все что требуется от разработчика – в этом обработчике подключить файл
                    плагина (разместить его можно, например, в своей папке в папке /bitrix/php_interface/include/) –
                    далее модуль просматривает все подключенные классы-потомки от \Acrit\ExportProPlus\Plugin и из них
                    строит список плагинов.
                </p>
                <p>
                    Структурно плагин представляет собой отдельную папку в общей папке плагинов. В папке плагина должен
                    находиться основной его файл – class.php, а также могут располагаться дополнительные: icon.png
                    (картинка размером 16х16 пикселей), style.css, script.js, .example.php, .description.php. Также в
                    этой папке имеется папка lang для языковых файлов. Если у плагина имеются различные форматы выгрузки
                    – у него должна быть создана папка formats, в которой каждый формат выгрузки реализован отдельной
                    подпапкой аналогично самому плагину.
                </p>
                <br>
                <h1>Структура файла class.php</h1>
                <br>
                <p>
                    Файл class.php должен содержать класс, реализовывающий абстрактный класс \Acrit\ExportProPlus\Plugin
                    (см. /lib/plugin.php).
                </p>
                <p>
                    Класс плагина должен иметь следующие основные методы:
                </p>
                <p>
                    getCode – метод должен возвращать символьный код плагина (формата), при этом рекомендуется
                    символьный код формата строить конкатенацией символьного кода плагина, символа подчеркивания и
                    уникального кода формата (напр., если плагин TEST, то формат TEST_1 или TEST_NEW).
                </p>
                <p>
                    getName – метод должен возвращать имя (заголовок) плагина (формата).
                </p>
                <p>
                    getDescription – метод должен возвращать описание плагина (формата), по умолчанию описание берется
                    из файла .description.php, наличие данного метода меняет логику получения описания.
                </p>
                <p>
                    getExample – метод должен возвращать пример генерируемых данные, работает аналогично методу
                    getDescription.
                </p>
                <p>
                    isSubclass – метод должен возвращать false для плагина и true для формата.
                </p>
                <p>
                    Также имеются другие методы, влияющие на процесс настройки и экспорта:
                </p>
                <p>
                    isOffersPreprocess – метод дает возможность указать, что сначала должны обрабатываться предложения,
                    которые не сохраняются отдельно, а затем уже сам товар. Благодаря этому можно выгружать товары,
                    внутри которых будет выгружены торговые предложения.
                </p>
                <p>
                    areAdditionalFieldsSupported – метод должен вернуть true для тех плагинов/форматов, которые
                    поддерживают дополнительные поля (как &lt;param&gt; в Яндекс.Маркет)
                </p>
                <p>
                    areCategoriesExport – метод должен вернуть true, если плагин/формат экспортирует категории в
                    итоговом файле.
                </p>
                <p>
                    isCategoryStrict – метод должен возвращать true, если плагин/формат использует только собственные
                    категории.
                </p>
                <p>
                    hasCategoryList – метод должен возвращать true, если в плагине/формате имеется собственный список
                    категорий.
                </p>
                <p>
                    Другие обязательные методы:
                </p>
                <p>
                    showSettings – метод должен возвращать HTML для показа блока настроек в профиле.
                </p>
                <p>
                    getFields – метод должен возвращать массив полей, доступных для настройки в каждом плагине/формате.
                    Каждый элемент в массиве должен быть класса \Acrit\ExportProPlus\Field\Field. В данном методе
                    имеется возможность задавать общие поля в плагине, а в форматах задавать специфические поля. Для
                    удобства имеются специальные методы работы с этим массивом полей: removeFields (чтобы в формате
                    удалить какие-то поля, заданные в плагине), sortFields (сортировать поля).
                </p>
                <p>
                    processElement – метод, выполняющий основную работу плагина/формата – генерация данных для одного
                    элемента. Метод возвращает массив, описывающий итоговую запись. Вызывается как для товаров, так и
                    для предложений (т.е. один вызов метода на один элемент инфоблока).
                </p>
                <p>
                    getSteps – метод (при его наличии) должен возвращать массив шагов для экспорта данным
                    плагином/профилем. Например, сюда можно добавлять шаги по экспорту в XML, сжатию в ZIP, выгрузке на
                    торговые площадки по API, отправку на другие сайты или по почте, создание отчетов – все что угодно.
                    Каждый элемент массива должен иметь ключ, который является символьным кодом, а сам элемент должен
                    содержать такие ключи как NAME (название шага выгрузки), SORT (индекс сортировки), FUNC
                    (callback-функция, являющаяся методом класса).
                </p>
                <br>
                <h1>Принцип работы плагинов на основе Яндекс.Маркета</h1>
                <br>
                <p>
                    Каждый плагин/формат должен иметь собственный набор полей (метод getFields), которые и доступны для
                    заполнения при выборе конкретного инфоблока в форме настройки профиля.
                </p>
                <p>
                    Во время выгрузки (а при автообработке – в момент обработки) товара по данному профилю модуль
                    получает все настроенные поля и их значения, обрабатывает их, и вызывает метод processElement, куда
                    приходят уже обработанные поля (аргумент $arFields). Этот метод, имея указанные данные, собирает из
                    них XML, и возвращает массив, описывающий полученный результат для данного товара (ключи TYPE, DATA,
                    CURRENCY, SECTION_ID и др). Эти данные записываются в таблицу, и впоследствии они отбираются в
                    соответствии с сортировкой и записываются в XML-файл (для записи в файл добавлен шаг EXPORT, для
                    архивации - ZIP).
                </p>
                <p>
                    В функции метода, выполняющего роль шага, имеются два аргумента: первый указывает на ID профиля,
                    второй – на массив с данными, в котором имеется: сессия SESSION (данные о текущей сессии выгрузки,
                    куда можно дописывать свои данные, но только для текущего шага – напр., на шаге EXPORT можно
                    записывать только в ключ $arData['SESSION']['EXPORT']), массив профиля и его настройки PROFILE,
                    массив всех шагов STEPS, данные о текущем шаге CURRENT_STEP_CODE и CURRENT_STEP, а также флаг
                    запуска из планировщика IS_CRON.
                </p>
                <p>
                    Каждый метод-шаг должен вернуть одно из трех значений:
                </p>
                <p>
                    \Acrit\ExportProPlus\Exporter::RESULT_SUCCESS – если процесс завершен, шаг выполнен и можно
                    переходить к следующему шагу.
                </p>
                <p>
                    \Acrit\ExportProPlus\Exporter::RESULT_CONTINUE – если шагу требуется еще запуск (не актуально для
                    вызова из Cron, т.к. в этом случае каждый шаг выполняется за 1 раз, внутри шага пошаговости нет).
                </p>
                <p>
                    \Acrit\ExportProPlus\Exporter::RESULT_ERROR – если шаг завершился с ошибкой, из-за которой нет
                    смысла продолжать процесс. Будет выдана ошибка, процесс завершится.
                </p>
                <p>
                </p>
                <br>
                <h1>Настройки полей и значений</h1>
                <br>
                <p>
                    Настройки полей и настройки значений это, фактически, одно и то же, как на уровне программной
                    логики, так и на пользовательском уровне. Вся разница между настройками задается в программном коде
                    самих настроек: каждая настройка это отдельный php-класс, в котором можно управлять логикой показа
                    настройки, а также процессом обработки значения текущей настройкой.
                </p>
                <p>
                    Иными словами, такие настройки как «Режим множественных значений», «Преобразовать HTML в текст»,
                    «Регистр текста» и др – это все отдельные классы (в /lib/settings/), в которых имеются методы
                    isForFields, isForValues, isShown для управления показом настроек.
                </p>
                <p>
                    Таким образом, все настройки построены по общему принципу, на основе базового класса
                    \Acrit\ExportProPlus\Settings\Base, где основные метод следующие:
                </p>
                <p>
                    getName – получение название,
                </p>
                <p>
                    getCode – получение символьного кода,
                </p>
                <p>
                    getHint – получение подсказки,
                </p>
                <p>
                    getSort – получение индекса сортировки,
                </p>
                <p>
                    getGroup – получение группы (в виде массива, т.к. если необходимо создать свою группу, то нужно
                    указывать не только символьный код, но и название группы),
                </p>
                <p>
                    isForFields – указание что данная настройка действует для полей,
                </p>
                <p>
                    isForValues – указание что данная настройка действует для значений,
                </p>
                <p>
                    showSettings – получение HTML-блока для вывода условий,
                </p>
                <p>
                    process – процесс обработки значения данной настройкой.
                </p>
                <p>
                    Имейте ввиду, что в настройках имеет значение их порядок (SORT), т.к. применение настроен
                    выполняется в порядке возрастания. Таким образом, сначала к «чистому» значению применяется опция 1,
                    затем к уже обработанному значению применяется опция 2 и т.д.
                </p>
                <p>
                    Важно упомянуть и про опцию множественности: данная опция позволяет управлять, какое значение будет
                    в результате обработки. Например, если необходимо чтобы в итоговом файле какой-либо XML-тег
                    «размножился», то для поля настройка «Режим множественных значений» должна иметь значение «Оставить
                    множественным» (имейте ввиду, что данный пункт в данной опции появляется для поля только если в
                    параметрах поля отмечена множественность [MULTIPLE =&gt; true, см. getFields() для плагина]).
                </p>
                <p>
                    Таком образом, если в поле указать несколько значений, оно не должно быть множественным. Оно должно
                    быть множественным только если выбран указанный в предыдущем абзаце пункт «Оставить множественным».
                    Иначе имеется возможность перечисления их через запятую или выборка первого непустого значения.
                </p>
                <p>
                    В процессе разработки важно помнить, что опция множественности должна быть первой в списке опций,
                    т.к. в противном случае настройки будут некорректно работать в целом.
                </p>
                <p>
                    Также имеется настройка «Использовать значение без обработки» (код RAW), обработка которой
                    выполняется не в process.php, а в коде модуля. Эта настройка позволяет выгружать не обработанные
                    значения, а исходные. Например, если у товара есть свойство привязки к элементам, данная опция
                    позволит выгружать не название привязанного элемента (само значение хранится в виде числового ID, а
                    название получается уже модулем), а собственно его ID.
                </p>
                <p>
                    Используя событие OnGetAllSettings, разработчик может добавить собственные настройки.
                </p>
                <br>
                <h1>Логирование</h1>
                <br>
                <p>
                    В модуле имеется класс \Acrit\ExportProPlus\Log, реализующий простое логирование:
                </p>
                <p>
                    \Acrit\ExportProPlus\Log::add($mMessage, $intProfileID=false);
                </p>
                <p>
                    Где $mMessage это логируемые данные (строка, число, массив, булево или null), а $intProfileID – это
                    ID профиля.
                </p>
                <p>
                    В зависимости от $ intProfileID модуль пишет либо в общий лог, либо в лог профиля. Логи находятся в
                    папке /upload/acrit.exportproplus.
                </p>
                <br>
                <h1>Дополнительные возможности</h1>
                <br>
                <p>
                    Для получения языковых фраз удобно использовать не Loc::getMessage(), а static::getMessage(), чтобы
                    не использовать длинные языковые фразы: в таком случае языковые фразы располагаются как бы в своей
                    области имен, например,
                </p>
                <p>
                    static::getMessage(‘NAME’);
                </p>
                <p>
                    равносильно этому:
                </p>
                <p>
                    Loc::getMessage(‘ACRIT_EXP_YANDEX_MARKET_NAME’);
                </p>
                <p>
                    В случае необходимости создания отдельных таблиц в базе данных для плагина/формата – это все
                    необходимо разрабатывать индивидуально в class.php с учетом того, что в модуле нет такого понятия
                    как «установка плагина», поэтому, например, перед созданием таблиц необходимо проверять их наличие.
                </p>
                <p>
                    Для работы с HTTP в модуле имеется класс \Acrit\ExportProPlus\HttpRequest, который умеет делать
                    запросы через cURL или file_get_contents (автоматически выбирается то, что доступно на сервере).
                    Метод getHttpContent используется как раз для выполнения HTTP-запроса, также имеются короткие вызовы
                    для запросов типа GET и POST (одноименные методы).
                </p>
                <br>
                <h1>Особенности работы при запуске из командной строки</h1>
                <br>
                <p>
                    Модуль умеет автоматически (кнопка «Настроить автозапуск» на странице редактирования профиля) для
                    каждого профиля настраивать задания планировщика, однако не на всех серверах это доступно. Если на
                    Вашем сервере это недоступно, следует вручную настроить задание на сервере (при наличии панели
                    управления хостингом это делается в панели, иначе – вручную через SSH). В любом случае, текст
                    команды для запуска можно «подсмотреть» во всплывающем окне при настройке автозапуске.
                </p>
                <p>
                    Запуск из командной строки (в т.ч. запуск из планировщика) имеет ряд особенностей. Первая
                    особенность – кодировка. На многих серверах параметры php для сайта и для командной строки в разной
                    степени различаются (особенно это касается настроек mbstring). А необходимы настройки идентичные.
                    Поэтому в команду запуска из планировщика модуль автоматически добавляет конфигурационные параметры
                    mbstring (см. настройки модуля).
                </p>
                <p>
                    Другая особенность – т.к. задание выполняется за один шаг, то на сервер может создаваться высокая
                    нагрузка (особенно, если генерация выполняется не автоматически, а перед экспортом), и на некоторых
                    серверах это может вызвать проблемы, если заданы какие-либо ограничения на нагрузку (например,
                    скрипт после нагрузки в течение 30 секунд может автоматически завершаться, при этом задание не будет
                    до конца выполнено).
                </p>
                <p>
                    При настройке автозапуска не забывайте учитывать версию PHP (см. настройки модуля): сейчас многие
                    хостинг-провайдеры имеют одновременно несколько версий PHP на одном сервере (при чем по умолчанию
                    [/usr/bin/php или же просто php] обычно это версия 5.x, а на сайте используется 7.x), поэтому при
                    настройке автозапуска должна использоваться та же версия, на которой настроен сайт, иначе запуск
                    закончится какой-либо ошибкой вследствие несовместимости работы системы на иной версии PHP.
                </p>
                <p>
                    Итоговая команда может выглядеть по-разному на каждом сервере, т.к. на каждом сервере свои
                    особенности. Пример команды:
                </p>
                <p>
                    /usr/bin/php -d "mbstring.func_overload"=0 -d "mbstring.internal_encoding"=UTF-8 -f
                    /home/bitrix/www/bitrix/modules/acrit.exportproplus/cron/export.php profile=3 start=Y
                </p>
                <p>
                    Здесь profile=3 указывает, что будет выполняться профиль с ID=3, а параметр start=Y – это
                    технический параметр, при этом - обязательный.
                </p>
                <p>
                    Для автоматической настройки требуется указание пути в php. Указать путь в php на своем сайте Вы
                    можете в настройках модуля. Также там имеется возможность включить или отключить добавление в
                    команду параметров mbstring.
                </p>
                <p>
                    Внимание! Первый запуск настоятельно рекомендуем провести через SSH, т.к. в этом случае сразу видны
                    возможные проблемы при настройке, в т.ч. проблемы с отправкой почты. Также, настраивая планировщик,
                    желательно указать свой email в его настройках, чтобы при наличии ошибок сообщения об этом приходили
                    на email.
                </p>
                <p>
                    Внимание! Задания планировщика должны выполняться от имени того же пользователя, от имени которого
                    работает сайт. Иначе возможны проблемы в дальнейшей работе. Так, при использовании виртуальной
                    машины Битрикс, если запускать команды через SSH войдя под пользователем root, задание будет
                    выполняться от имени root, поэтому, если все файлы сайта принадлежат пользователю bitrix, то файлы и
                    папки модуля, создаваемые во время выполнения задачи (в т.ч. генерируемые модулем файлы XML, CSV,
                    Excel и др.) будут принадлежать пользователю root, и сайт не сможет работать с этими файлами (в
                    напр., удалить, переименовать или переместить их).
                </p>
                <br>
                <h1>Стиль и логика написания php-кода</h1>
                <br>
                <p>
                    Ввиду большого объема исходного кода модуля, а также ввиду достаточной его сложности, важно понимать
                    и соблюдать правила написания исходного кода. Основные правила следующие:
                </p>
                <p>
                    1)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Все php-файлы должны быть в пространстве имен Acrit\ExportProPlus,
                </p>
                <p>
                    2)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Отступы – только табуляция, пробелы не допускаются.
                </p>
                <p>
                    3)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Открытие фигурной скобки на строке оператора, а не на отдельной
                    строке, дополнительные конструкции (в рамках данной конструкции) начинаются с новой строки,
                    подчиненный код сдвинут на один символ табуляции:<br>
                    if ($a==$b){<br>
                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; print "equal";<br>
                    }<br>
                    else {<br>
                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; print "not equal";<br>
                    }
                </p>
                <p>
                    4)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Лишние пробелы в скобках (условия, циклы, аргументы) не
                    добавляются.
                </p>
                <p>
                    5)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Префиксы для переменных – int (целое число), f (дробное число), str
                    (строка), ar (массив), ob (объект), res (ресурс), b (булево), m (mixed).
                </p>
                <p>
                    6)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Имена переменных, классов, идентификаторов и т.п. должны быть
                    понятными и без сокращений.
                </p>
                <p>
                    7)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; В таких именах каждое логическое слово должно начинаться с
                    заглавной буквы. В именах нельзя употреблять подчеркивания для разделения слов.
                </p>
                <p>
                    8)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Длина строки не имеет значения, но в будущем она будет сокращена до
                    120 символов (при визуальной ширине табуляции в 2 печатных символа).
                </p>
                <p>
                    9)&nbsp;&nbsp; Все функции и методы, хотя бы очень кратко, но должны быть прокомментированы
                    (желательно English), особенно для сложных случаев:<br>
                    /**
                </p>
                <p>
                    *&nbsp;&nbsp;&nbsp;&nbsp; This function starts export
                </p>
                <p>
                    */
                </p>
                <p>
                    10)&nbsp;&nbsp; В пределах функции/метода, в сложных случаях, можно разделять логические блоки
                    пустой строкой комментария.
                </p>
                <p>
                    11)&nbsp;&nbsp; Строковые переменные оформляются, в основном, одинарными кавычками, кроме случаев
                    где использование двойных кавычек оправданно.
                </p>
                <br>
                <h1>Потенциальные вопросы и ответы на них</h1>
                <br>
                <p>
                    Что обозначают символы-звездочки в названиях полей (напр., «Название *» или «* Название»)?
                </p>
                <p>
                    Символ звездочки обозначает, что данное поле берется не из данного товара. Оно может браться из
                    первого торгового предложения или из родительского товара (соответственно одна и две звездочки после
                    названия поля), а также из родительского раздела или инфоблока (соответственно одна и две звездочки
                    до названия поля).
                </p>
                <p>
                    При выборе поля для товара можно выбрать данные из его предложений. Из какого предложения будет
                    выбрано значение?
                </p>
                <p>
                    Данные берутся из первого предложения, т.е. учитывается параметр сортировки торговых предложений, и
                    в соответствии с ним выбирается первое предложение. Если у конкретного товара нет предложений, то
                    значение будет пустым.
                </p>
                <p>
                    Можно ли выгружать текст, в котором будут использоваться свойства товара?
                </p>
                <p>
                    Да, для каждого значения поля можно выгружать как значение типа «Поле/свойство», так и просто
                    «Значение» - в последнем случае это простое текстовое поле, но здесь поддерживаются макросы (вида
                    {=properties.PROPERTY_COLOR}). Также, отметив в настройках галочку «Использовать как математическую
                    формулу», можно использовать строку как арифметическое значение. Если при этом отметить галочку
                    «Использовать php-функцию eval()», то подсчет осуществляется функцией eval, т.о. можно производить
                    не только вычисления, но и использовать практически любые php-функции.
                </p>
                <p>
                    Как для поля с описанием применить CData?
                </p>
                <p>
                    Формат CData можно использовать только для тех полей, для которых такая возможность включена (т.е.
                    при объявлении поля задано CDATA =&gt; true). Такой формат применяется только к полю в целом, а не
                    отдельно к каждому значению. Т.к. в этом поле допускается использование HTML-символов, то в самих
                    значениях нужно выставлять опции «Спецсимволы» значение «Оставить как есть», а в настройках поля в
                    этой же опции указать «Формат CData».
                </p>
                <p>
                    Как создать свой первый плагин?
                </p>
                <p>
                    Для начала необходимо хотя бы в общих чертах понять принцип работы модуля (ознакомиться с
                    руководством). Затем нужно открыть для изучения один из существующих плагинов, напр., Avito. Плагин
                    это, условно, класс. В классе имеются некоторые описательные методы (для получения названия, кода,
                    описания и т.д.), метод getFields для получение всех доступных полей плагина, а также метод
                    processElement, который обрабатывает один товар. Эти методы являются основополагающими.
                </p>
                <p>
                    Далее, могут возникнуть ситуации, когда необходимо что-то нестандартное. В таком случае это все
                    реализуется прямо в этом же классе, причем если для плагина имеются различные форматы, то
                    целесообразно общий код писать в общем классе плагина. В таком случае код получится красивым и
                    лаконичным.
                </p>
                <p>
                    Если появляются трудности или вопросы – пожалуйста, обращайтесь к разработчикам модуля.
                </p>
                <p>
                    У меня не работает автонастройка планировщика. Как настроить вручную?
                </p>
                <p>
                    Автонастройка это очень удобная вещь, но на некоторых серверах возможность такой автонастройки
                    отсутствует. В таких случаях необходимо настраивать вручную. Если в настройках модуля указано
                    правильно путь к php, то достаточно зайти в профиль, скопировать команду и настроить ее на
                    планировщик. Имейте ввиду, что это будет команда, а не PHP-скрипт! Если Ваш хостинг предоставляет
                    возможность настроить планировщик для PHP-скрипта, то нужно убрать часть команды до начала пути к
                    скрипту.
                </p>
                <p>
                    Как определить путь к PHP на сервере?
                </p>
                <p>
                    Если у Вас используется виртуальная машина Битрикс, то указывайте просто «/usr/bin/php» или если
                    хотите еще проще – «php».
                </p>
                <p>
                    Такой же вариант используется на многих других типов серверов.
                </p>
                <p>
                    Если у Вас не виртуальная машина, то самый простой вариант – спросить в техподдержке хостинга
                    (указав версию PHP, на которой работает сайт).
                </p>
                <p>
                    Как происходит сортировка товаров в генерируемом файле?
                </p>
                <p>
                    В таблицу сгенерированных данных товары попадают в порядке увеличения их ID. При этом к каждой
                    записи вычисляется значение SORT в соответствии с настройками профиля для сортировки. При выгрузке
                    же товары сортируются именно по данному полю SORT. При этом, если две и более записи имеют равное
                    значение SORT (в т.ч. пустые), сортировка выполняется по ID товара.
                </p>
                <p>
                    После настройки профиля и первой выгрузки я поменял настройки профиля. Нужно ли перегенерировать
                    товары?
                </p>
                <p>
                    При каждом сохранении профиля автоматически выполняется удаление сгенерированных данных для этого
                    профиля. Т.к. сгенерированных данных не остается, то они будут сгенерированы при следующем запросе
                    (следующая выгрузка пройдет дольше обычного). </p>


                <br><br>

            </div>
        </td>
    </tr>
    <?
$obTabControl->EndCustomField('MANUAL_DEV');

$obTabControl->BeginCustomField('QUESTION', Helper::getMessage('ACRIT_EXP_QUESTION'));
?>
    <tr class="heading">
        <td><?= $obTabControl->GetCustomLabelHTML() ?></td>
    </tr>
    <tr>
        <td style="text-align:center;">
            //////
        </td>
    </tr>
    <?
$obTabControl->EndCustomField('QUESTION');

$obTabControl->BeginCustomField('SETTING', Helper::getMessage('ACRIT_EXP_SETTING'));
?>
    <tr class="heading">
        <td><?= $obTabControl->GetCustomLabelHTML() ?></td>
    </tr>
    <tr>
        <td>
            <div class="col-md-8">
                <div>
                    Первым делом для проверки работы модуля в автоматическом режиме необходимо запустить системный тест
                    Битрикса&nbsp;<a
                            href="https://www.Ваш-сайт.ru/bitrix/admin/fileman_admin.php?PAGEN_1=1&amp;SIZEN_1=500&amp;lang=ru&amp;path=%2Fbitrix%2Ftools%2Facrit.exportproplus">https://www.Ваш-сайт.ru/</a><a
                            href="https://www.acrit-studio.ru/bitrix/admin/site_checker.php?lang=ru">bitrix/admin/site_checker.php?lang=ru</a>
                    и убедиться что он проходит проверку не выдавая замечания что агенты надо настроить на крон.
                </div>
                <div>
                    <br>
                </div>
                <div>
                    далее следует убедиться что ядро системы не изменялось, так как встречается ситуация когда кто-то
                    полез в ядро и отключил исполнение агентов. т.е. для системы все было как будто они исполняются, а
                    оказалось все вот так: <a
                            href="https://yadi.sk/i/1weBt5kB3Z7FwE">https://yadi.sk/i/1weBt5kB3Z7FwE</a> проверить сразу
                    ядро вот этим тестом:&nbsp;<a
                            href="https://www.Ваш-сайт.ru/bitrix/admin/fileman_admin.php?PAGEN_1=1&amp;SIZEN_1=500&amp;lang=ru&amp;path=%2Fbitrix%2Ftools%2Facrit.exportproplus">https://www.Ваш-сайт.ru/</a><a
                            href="https://www.beloten.ru/bitrix/admin/checklist.php?lang=ru">bitrix/admin/checklist.php?lang=ru</a><br>
                    и если этот тест проваливается "ядро не модифицировалось" <a
                            href="https://yadi.sk/i/7U-CgEmO3Z7Gp3">https://yadi.sk/i/7U-CgEmO3Z7Gp3</a><br>
                    то отправляться это чинить. Как вариант перезалить эталонные версии модулей Битрикса по ссылке <a
                            href="https://www.Ваш-сайт.ru/bitrix/admin/update_system.php?refresh=Y&amp;lang=ru&amp;BX_SUPPORT_MODE=Y">https://www.Ваш-сайт.ru/bitrix/admin/update_system.php?refresh=Y&amp;amp;lang=ru&amp;amp;BX_SUPPORT_MODE=Y</a>
                </div>
                <div>
                    Встречается ситуация, когда не заработал экспорт в автоматическом режиме (через CRON). При этом сайт
                    был настроен корректно, тесты не выдавали никаких ошибок и предупреждений все базовые требования
                    были соблюдены. Ручной запуск срабатывал. <br>
                </div>
                <div>
                    <br>
                </div>
                Проверить работу можно убедившись наличием временных файлов в папках сайта<br>
                <a href="https://www.Ваш-сайт.ru/bitrix/admin/fileman_admin.php?PAGEN_1=1&amp;SIZEN_1=500&amp;lang=ru&amp;path=%2Fbitrix%2Ftools%2Facrit.exportproplus">https://www.Ваш-сайт.ru/bitrix/admin/fileman_admin.php?PAGEN_1=1&amp;amp;SIZEN_1=500&amp;amp;lang=ru...</a>&nbsp;
                <br>
                <a href="https://www.Ваш-сайт.ru/bitrix/admin/fileman_admin.php?PAGEN_1=1&amp;SIZEN_1=500&amp;lang=ru&amp;path=%2Fupload%2Facrit.exportproplus">https://www.Ваш-сайт.ru/bitrix/admin/fileman_admin.php?PAGEN_1=1&amp;amp;SIZEN_1=500&amp;amp;lang=ru...</a>
                - в этих папках во время работы процесса экспорта появляются временные файлы с данными отработки каждого
                шага экспорта.<br>
                <br>
                Если включить атоматическую выгрузку то в списк еагентов должен появиться агент модуля который будет
                проверять каждую минуту необходимость запуска процесса экспорта, и в случае наступления времени
                генерации запускает процесс экспорта на кроне. Для того чтобы автоматический режим работал корректно в
                системе обязательно должна быть настроена работа агентов на cron.<br>
                <br>
                Если при включении периодического запуск экспорта через агентов запуск не происходит, то первым делом
                стоит проверить версии php под которыми работает консоль сервера и сам сайт.<br>
                <br>
                В этом случае при тестовом запуске агента непосредственно из командной строки получили ошибки,
                характерные для устаревшей версии PHP. Но при этом проверка сайта через phpinfo() выдает версию PHP 7.1,
                которая является приемлемой, на данный момент, для работы всех функций Битрикса (и уж тем более
                агентов).<br>
                <br>
                В итоге причина оказалась в том, что для веб-сервера и для командной строки были настроены разные версии
                PHP. Стандартный путь до PHP-интерпретатора (/usr/bin/php) вёл на версию 5.4, а для запуска версии 7.1
                необходимо было вызывать другой путь.<br>
                <br>
                Вывод: Во избежание коллизий, при настройке сервера необходимо следить за тем, чтобы и веб-сервер, и
                запуск скриптов из консоли работал на одной версии PHP.<br><br><br>
            </div>
        </td>
    </tr>
    <?
$obTabControl->EndCustomField('SETTING');

//
$obTabControl->BeginCustomField('REQUIREMENTS_1', Helper::getMessage('ACRIT_EXP_REQUIREMENTS_1'));
$strUrl = 'https://www.acrit-studio.ru/technical-support/configuring-the-module-export-on-trade-portals/test-your-environment-before-configuring-the-module-acrit-export/';
?>
    <tr class="heading">
        <td colspan="2"><?= $obTabControl->GetCustomLabelHTML() ?></td>
    </tr>
    <tr>
        <td style="text-align:center;">
            <div><a href="<?= $strUrl; ?>" target="_blank"><?= $strUrl; ?></a></div>
            <br/>
        </td>
    </tr>
    <?
$obTabControl->EndCustomField('REQUIREMENTS_1');
